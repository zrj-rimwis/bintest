From 554c963cdfe6b4e6e6beb9e3004b490b52534cbf Mon Sep 17 00:00:00 2001
From: zrj <rimvydas.jasinskas@gmail.com>
Date: Thu, 22 Aug 2019 22:31:58 +0300
Subject: [PATCH 40/52] <sys/kinfo.h>: Fix legacy inclusion issues.

 Sadly this header was not being included properly for a long time.
 Make it publicly accessable and put a big NOTE how to do it properly for
 future codes.  This makes the <sys/user.h> the only other header that
 defines _KERNEL_STRUCTURES to solve long term inclusion order issues.
 Previous variant was hiding implicit dependencies, adjust netstat(1).

 While there remove two defines that were not used since introduced in
 5dfd06ac148512faf075c4e399e8485fd955578f
---
 sys/sys/kinfo.h         | 52 +++++++++++++++++++++++++++--------------
 sys/sys/proc.h          |  4 ++++
 usr.bin/netstat/route.c |  3 ++-
 3 files changed, 41 insertions(+), 18 deletions(-)

diff --git a/sys/sys/kinfo.h b/sys/sys/kinfo.h
index 2bcd1fbacb..9c1e8e83ad 100644
--- a/sys/sys/kinfo.h
+++ b/sys/sys/kinfo.h
@@ -35,10 +35,6 @@
 #ifndef _SYS_KINFO_H_
 #define _SYS_KINFO_H_
 
-#ifndef _KERNEL_STRUCTURES
-#define _KERNEL_STRUCTURES
-#endif
-
 #ifndef _SYS_TYPES_H_
 #include <sys/types.h>
 #endif
@@ -47,7 +43,30 @@
 #endif
 #include <sys/resource.h>
 #include <sys/rtprio.h>
+#ifdef _KERNEL
 #include <sys/proc.h>
+#endif
+
+/*
+ * NOTE: correct way to use this header from non kernel code is to include
+ * the <sys/user.h> first!  Following helper is for historic reasons only.
+ */
+#ifndef _STRUCT_PROC_ENUMS_DECLARED
+#define _STRUCT_PROC_ENUMS_DECLARED
+enum lwpstat {
+	LSRUN = 1,
+	LSSTOP = 2,
+	LSSLEEP = 3,
+};
+
+enum procstat {
+	SIDL = 1,
+	SACTIVE = 2,
+	SSTOP = 3,
+	SZOMB = 4,
+	SCORE = 5,
+};
+#endif	/* !_STRUCT_PROC_ENUMS_DECLARED */
 
 struct kinfo_file {
 	size_t	 f_size;	/* size of struct kinfo_file */
@@ -177,12 +196,13 @@ struct kinfo_proc {
 	gid_t		kp_rgid;
 	gid_t		kp_svgid;
 
-	pid_t		kp_pid;	/* process id */
+	pid_t		kp_pid;		/* process id */
 	pid_t		kp_ppid;	/* parent process id */
 	pid_t		kp_pgid;	/* process group id */
 	int		kp_jobc;	/* job control counter */
-	pid_t		kp_sid;	/* session id */
-	char		kp_login[roundup(MAXLOGNAME, sizeof(long))];	/* setlogin() name */
+	pid_t		kp_sid;		/* session id */
+	char		kp_login[roundup(MAXLOGNAME, sizeof(long))];
+					/* setlogin() name */
 	dev_t		kp_tdev;	/* controlling tty dev */
 	pid_t		kp_tpgid;	/* tty process group id */
 	pid_t		kp_tsid;	/* tty session id */
@@ -216,7 +236,7 @@ struct kinfo_proc {
 };
 
 /*
- * KERN_SIGTRAMP
+ * KERN_SIGTRAMP, public, KERN_PROC_SIGTRAMP used in external codes
  */
 struct kinfo_sigtramp {
 	void		*ksigtramp_start;
@@ -224,23 +244,21 @@ struct kinfo_sigtramp {
 	void		*ksigtramp_spare[4];
 };
 
+#if defined(_KERNEL) || defined(_KERNEL_STRUCTURES)
 struct proc;
 struct lwp;
 struct thread;
 
+__BEGIN_DECLS
 void fill_kinfo_proc(struct proc *, struct kinfo_proc *);
 void fill_kinfo_lwp(struct lwp *, struct kinfo_lwp *);
 void fill_kinfo_proc_kthread(struct thread *, struct kinfo_proc *);
+__END_DECLS
+#endif	/* defined(_KERNEL) || defined(_KERNEL_STRUCTURES) */
 
-#define KINFO_NEXT(kp)	((union kinfo *)((uintptr_t)kp + kp->gen.len))
-#define KINFO_END(kp)	(kp->gen.type == KINFO_TYPE_END)
-
-#if defined(_KERNEL)
+#ifdef _KERNEL
 #define cpu_time	cputime_percpu[mycpuid]
-#endif
-
-#if defined(_KERNEL)
 extern struct kinfo_cputime cputime_percpu[MAXCPU];
-#endif
+#endif	/* _KERNEL */
 
-#endif /* !_SYS_KINFO_H_ */
+#endif	/* !_SYS_KINFO_H_ */
diff --git a/sys/sys/proc.h b/sys/sys/proc.h
index 846c486509..b0736d5f24 100644
--- a/sys/sys/proc.h
+++ b/sys/sys/proc.h
@@ -152,6 +152,9 @@ struct vmspace_entry;
 struct ktrace_node;
 struct sem_undo;
 
+/* Also declared in sys/kinfo.h */
+#ifndef _STRUCT_PROC_ENUMS_DECLARED
+#define _STRUCT_PROC_ENUMS_DECLARED
 enum lwpstat {
 	LSRUN = 1,
 	LSSTOP = 2,
@@ -165,6 +168,7 @@ enum procstat {
 	SZOMB = 4,
 	SCORE = 5,
 };
+#endif	/* !_STRUCT_PROC_ENUMS_DECLARED */
 
 struct lwp {
 	TAILQ_ENTRY(lwp) lwp_procq;	/* run/sleep queue. */
diff --git a/usr.bin/netstat/route.c b/usr.bin/netstat/route.c
index 128a8f1c99..f73d0b7029 100644
--- a/usr.bin/netstat/route.c
+++ b/usr.bin/netstat/route.c
@@ -30,6 +30,7 @@
  * $FreeBSD: src/usr.bin/netstat/route.c,v 1.41.2.14 2002/07/17 02:22:22 kbyanc Exp $
  */
 
+#define _KERNEL_STRUCTURES
 #include <sys/kinfo.h>
 #include <sys/param.h>
 #include <sys/socket.h>
@@ -37,7 +38,7 @@
 
 #include <net/ethernet.h>
 #include <net/if.h>
-#include <net/if_var.h>
+#include <net/if_var.h>		/* for struct ifnet */
 #include <net/if_dl.h>
 #include <net/if_types.h>
 #include <net/route.h>
-- 
2.22.0

