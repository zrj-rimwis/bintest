From d994336f6674a6f2804e12a2fd2a009099d2b477 Mon Sep 17 00:00:00 2001
From: zrj <rimvydas.jasinskas@gmail.com>
Date: Fri, 9 Aug 2019 10:53:39 +0300
Subject: [PATCH 01/66] <machine/stdarg.h>: Add workaround for external
 compilers.

 We need to drop using __va_copy() in kernel code for compatibility.
 One variant is to rename it to ___va_copy(), another is to  use
 standard va_copy() and friends.

 NOPUSH
---
 sys/cpu/x86_64/include/stdarg.h | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/sys/cpu/x86_64/include/stdarg.h b/sys/cpu/x86_64/include/stdarg.h
index b5be5af128..77e51136a5 100644
--- a/sys/cpu/x86_64/include/stdarg.h
+++ b/sys/cpu/x86_64/include/stdarg.h
@@ -46,6 +46,14 @@ typedef	char *			__va_list;
 typedef __va_list		__gnuc_va_list;	/* compatibility w/GNU headers*/
 #endif
 
+/*
+ * Both Clang and GCC always define __va_copy() macro.  It causes redefinition
+ * warnings if their <stdarg.h> comes before <machine/stdarg.h>.
+ * For now unconditionally #undef it until kernel is converted to use standard
+ * variants or kernel sources are updated to use ___va_copy() macro.
+ */
+#undef __va_copy
+
 /*
  * Standard va types and macros
  */
-- 
2.22.0

