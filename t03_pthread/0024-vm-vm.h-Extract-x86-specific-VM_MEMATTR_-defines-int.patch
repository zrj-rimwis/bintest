From 1ef0699d3912689aadb66d9cd70d345adc6b5320 Mon Sep 17 00:00:00 2001
From: zrj <rimvydas.jasinskas@gmail.com>
Date: Mon, 19 Aug 2019 19:16:28 +0300
Subject: [PATCH 24/66] <vm/vm.h>: Extract x86 specific VM_MEMATTR_* defines
 into machine header.

 For different architectures these are not the same, PAT_* are x86 only.
---
 sys/cpu/x86_64/include/vm.h | 42 +++++++++++++++++++++++++++++++++++++
 sys/vm/vm.h                 | 16 ++------------
 2 files changed, 44 insertions(+), 14 deletions(-)
 create mode 100644 sys/cpu/x86_64/include/vm.h

diff --git a/sys/cpu/x86_64/include/vm.h b/sys/cpu/x86_64/include/vm.h
new file mode 100644
index 0000000000..016d5a8457
--- /dev/null
+++ b/sys/cpu/x86_64/include/vm.h
@@ -0,0 +1,42 @@
+/*
+ * Copyright (c) 2019 The DragonFly Project.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in the
+ *    documentation and/or other materials provided with the distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
+ * FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE
+ * COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
+ * INCIDENTAL, SPECIAL, EXEMPLARY OR CONSEQUENTIAL DAMAGES (INCLUDING,
+ * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
+ * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
+ * SUCH DAMAGE.
+ */
+
+#ifndef _CPU_VM_H_
+#define _CPU_VM_H_
+
+#include <machine/specialreg.h>
+
+/* Memory attributes. */
+#define VM_MEMATTR_UNCACHEABLE		((vm_memattr_t)PAT_UNCACHEABLE)
+#define VM_MEMATTR_WRITE_COMBINING	((vm_memattr_t)PAT_WRITE_COMBINING)
+#define VM_MEMATTR_WRITE_THROUGH	((vm_memattr_t)PAT_WRITE_THROUGH)
+#define VM_MEMATTR_WRITE_PROTECTED	((vm_memattr_t)PAT_WRITE_PROTECTED)
+#define VM_MEMATTR_WRITE_BACK		((vm_memattr_t)PAT_WRITE_BACK)
+#define VM_MEMATTR_WEAK_UNCACHEABLE	((vm_memattr_t)PAT_UNCACHED)
+
+#define VM_MEMATTR_DEFAULT		VM_MEMATTR_WRITE_BACK
+
+#endif /* !_CPU_VM_H_ */
diff --git a/sys/vm/vm.h b/sys/vm/vm.h
index 4ec6ae7590..5969e87cfc 100644
--- a/sys/vm/vm.h
+++ b/sys/vm/vm.h
@@ -65,7 +65,7 @@
 #ifndef _SYS_TYPES_H_
 #include <sys/types.h>
 #endif
-#include <machine/specialreg.h>
+#include <machine/vm.h>
 
 typedef char vm_inherit_t;	/* inheritance codes */
 
@@ -115,21 +115,9 @@ struct vm_page;
 typedef struct vm_page *vm_page_t;
 #endif
 
-
-/* Memory attributes. */
-
 #ifndef __VM_MEMATTR_T_DEFINED__
 #define __VM_MEMATTR_T_DEFINED__
 typedef char vm_memattr_t;
 #endif
 
-#define VM_MEMATTR_UNCACHEABLE		((vm_memattr_t)PAT_UNCACHEABLE)
-#define VM_MEMATTR_WRITE_COMBINING	((vm_memattr_t)PAT_WRITE_COMBINING)
-#define VM_MEMATTR_WRITE_THROUGH	((vm_memattr_t)PAT_WRITE_THROUGH)
-#define VM_MEMATTR_WRITE_PROTECTED	((vm_memattr_t)PAT_WRITE_PROTECTED)
-#define VM_MEMATTR_WRITE_BACK		((vm_memattr_t)PAT_WRITE_BACK)
-#define VM_MEMATTR_WEAK_UNCACHEABLE	((vm_memattr_t)PAT_UNCACHED)
-
-#define VM_MEMATTR_DEFAULT	VM_MEMATTR_WRITE_BACK
-
-#endif				/* _VM_VM_H_ */
+#endif	/* !_VM_VM_H_ */
-- 
2.22.0

