diff --git a/contrib/wpa_supplicant/wpa_supplicant/scan.c b/contrib/wpa_supplicant/wpa_supplicant/scan.c
index 436088f3f7..18d243ebd4 100644
--- a/contrib/wpa_supplicant/wpa_supplicant/scan.c
+++ b/contrib/wpa_supplicant/wpa_supplicant/scan.c
@@ -1410,9 +1410,7 @@ struct wpabuf * wpa_scan_get_vendor_ie_multi(const struct wpa_scan_res *res,
 static int wpa_scan_result_compar(const void *a, const void *b)
 {
 #define IS_5GHZ(n) (n > 4000)
-#ifndef __DragonFly__
 #define MIN(a,b) a < b ? a : b
-#endif
 	struct wpa_scan_res **_wa = (void *) a;
 	struct wpa_scan_res **_wb = (void *) b;
 	struct wpa_scan_res *wa = *_wa;
@@ -1468,9 +1466,7 @@ static int wpa_scan_result_compar(const void *a, const void *b)
 	if (snr_b == snr_a)
 		return wb->qual - wa->qual;
 	return snr_b - snr_a;
-#ifndef __DragonFly__
 #undef MIN
-#endif
 #undef IS_5GHZ
 }
 
diff --git a/lib/libc/stdlib/dmalloc.c b/lib/libc/stdlib/dmalloc.c
index 983de72801..3f7fd7e40f 100644
--- a/lib/libc/stdlib/dmalloc.c
+++ b/lib/libc/stdlib/dmalloc.c
@@ -118,7 +118,6 @@
 #include <sys/types.h>
 #include <sys/mman.h>
 #include <sys/queue.h>
-#include <sys/uio.h>
 #include <sys/ktrace.h>
 #include <stdio.h>
 #include <stdint.h>
diff --git a/lib/libc/stdlib/nmalloc.c b/lib/libc/stdlib/nmalloc.c
index 3608a750e8..4ef9ac3094 100644
--- a/lib/libc/stdlib/nmalloc.c
+++ b/lib/libc/stdlib/nmalloc.c
@@ -115,7 +115,6 @@
 #include <sys/types.h>
 #include <sys/mman.h>
 #include <sys/queue.h>
-#include <sys/uio.h>
 #include <sys/ktrace.h>
 #include <stdio.h>
 #include <stdint.h>
diff --git a/lib/libc/sys/ktrace.2 b/lib/libc/sys/ktrace.2
index 8078de72dd..e9cabf15e6 100644
--- a/lib/libc/sys/ktrace.2
+++ b/lib/libc/sys/ktrace.2
@@ -27,9 +27,8 @@
 .\"
 .\"     @(#)ktrace.2	8.1 (Berkeley) 6/4/93
 .\" $FreeBSD: src/lib/libc/sys/ktrace.2,v 1.9.2.7 2001/12/14 18:34:01 ru Exp $
-.\" $DragonFly: src/lib/libc/sys/ktrace.2,v 1.4 2008/10/16 08:15:18 swildner Exp $
 .\"
-.Dd November 15, 2009
+.Dd November 20, 2019
 .Dt KTRACE 2
 .Os
 .Sh NAME
@@ -40,7 +39,6 @@
 .Sh SYNOPSIS
 .In sys/param.h
 .In sys/time.h
-.In sys/uio.h
 .In sys/ktrace.h
 .Ft int
 .Fn ktrace "const char *tracefile" "int ops" "int trpoints" "int pid"
@@ -137,7 +135,8 @@ include file.
 .Sh RETURN VALUES
 .Rv -std ktrace
 .Sh ERRORS
-.Fn Ktrace
+The
+.Fn ktrace
 will fail if:
 .Bl -tag -width Er
 .It Bq Er ENOTDIR
diff --git a/lib/libc/sys/utrace.2 b/lib/libc/sys/utrace.2
index 35b796deb0..3d0eeb7b1c 100644
--- a/lib/libc/sys/utrace.2
+++ b/lib/libc/sys/utrace.2
@@ -34,9 +34,8 @@
 .\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 .\"
 .\" $FreeBSD: src/lib/libc/sys/utrace.2,v 1.3 2004/07/03 23:14:34 ru Exp $
-.\" $DragonFly: src/lib/libc/sys/utrace.2,v 1.1 2008/10/16 07:58:43 matthias Exp $
 .\"
-.Dd October 16, 2008
+.Dd November 20, 2019
 .Dt UTRACE 2
 .Os
 .Sh NAME
@@ -48,7 +47,6 @@
 .In sys/types.h
 .In sys/param.h
 .In sys/time.h
-.In sys/uio.h
 .In sys/ktrace.h
 .Ft int
 .Fn utrace "const void *addr" "size_t len"
diff --git a/lib/libdmsg/dmsg.h b/lib/libdmsg/dmsg.h
index 7f0f1c634f..cc73a44fa0 100644
--- a/lib/libdmsg/dmsg.h
+++ b/lib/libdmsg/dmsg.h
@@ -360,6 +360,8 @@ struct dmsg_master_service_info {
 
 typedef struct dmsg_master_service_info dmsg_master_service_info_t;
 
+struct iovec;	/* forward decl for dmsg_crypto_encrypt() prototype */
+
 /*
  * node callbacks
  */
diff --git a/libexec/rtld-elf/rtld.c b/libexec/rtld-elf/rtld.c
index cca3a66aa9..1c237bdc06 100644
--- a/libexec/rtld-elf/rtld.c
+++ b/libexec/rtld-elf/rtld.c
@@ -43,7 +43,6 @@
 #include <sys/mman.h>
 #include <sys/stat.h>
 #include <sys/sysctl.h>
-#include <sys/uio.h>
 #include <sys/utsname.h>
 #include <sys/ktrace.h>
 #include <sys/resident.h>
diff --git a/sbin/hammer2/hammer2.h b/sbin/hammer2/hammer2.h
index f771d5fd57..06639f5cef 100644
--- a/sbin/hammer2/hammer2.h
+++ b/sbin/hammer2/hammer2.h
@@ -40,7 +40,6 @@
  * Rollup headers for hammer2 utility
  */
 #include <sys/types.h>
-#include <sys/uio.h>
 #include <sys/queue.h>
 #include <sys/mount.h>
 #include <sys/file.h>
diff --git a/sys/bus/cam/scsi/scsi_target.c b/sys/bus/cam/scsi/scsi_target.c
index 6bdda19af7..613e8141cb 100644
--- a/sys/bus/cam/scsi/scsi_target.c
+++ b/sys/bus/cam/scsi/scsi_target.c
@@ -31,6 +31,7 @@
 
 #include <sys/param.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #include <sys/kernel.h>
 #include <sys/conf.h>
 #include <sys/device.h>
diff --git a/sys/dev/disk/vn/vn.c b/sys/dev/disk/vn/vn.c
index 11bca57c25..a43b88583a 100644
--- a/sys/dev/disk/vn/vn.c
+++ b/sys/dev/disk/vn/vn.c
@@ -55,6 +55,7 @@
 #include "use_vn.h"
 #include <sys/param.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #include <sys/kernel.h>
 #include <sys/proc.h>
 #include <sys/priv.h>
diff --git a/sys/dev/drm/drm_fops.c b/sys/dev/drm/drm_fops.c
index 6a860cc761..8d649e4f07 100644
--- a/sys/dev/drm/drm_fops.c
+++ b/sys/dev/drm/drm_fops.c
@@ -34,6 +34,8 @@
  * OTHER DEALINGS IN THE SOFTWARE.
  */
 
+#include <sys/types.h>
+#include <sys/uio.h>	/* must come first to avoid kfree() macros issues */
 #include <drm/drmP.h>
 #include <linux/poll.h>
 #include <linux/slab.h>
diff --git a/sys/dev/misc/nmdm/nmdm.c b/sys/dev/misc/nmdm/nmdm.c
index 7530b676a7..92811941ec 100644
--- a/sys/dev/misc/nmdm/nmdm.c
+++ b/sys/dev/misc/nmdm/nmdm.c
@@ -36,6 +36,7 @@
  */
 #include <sys/param.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #include <sys/proc.h>
 #include <sys/priv.h>
 #include <sys/tty.h>
diff --git a/sys/dev/misc/snp/snp.c b/sys/dev/misc/snp/snp.c
index 05b011d4c0..8c29e972fd 100644
--- a/sys/dev/misc/snp/snp.c
+++ b/sys/dev/misc/snp/snp.c
@@ -20,6 +20,7 @@
 #include "use_snp.h"
 #include <sys/param.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #include <sys/filio.h>
 #include <sys/malloc.h>
 #include <sys/tty.h>
@@ -474,7 +475,7 @@ snp_detach(struct snoop *snp)
 
 detach_notty:
 	KNOTE(&snp->snp_kq.ki_note, 0);
-	if ((snp->snp_flags & SNOOP_OPEN) == 0) 
+	if ((snp->snp_flags & SNOOP_OPEN) == 0)
 		kfree(snp, M_SNP);
 
 	return (0);
diff --git a/sys/dev/video/bktr/bktr_core.c b/sys/dev/video/bktr/bktr_core.c
index 99070f4d95..34d8c1f6ae 100644
--- a/sys/dev/video/bktr/bktr_core.c
+++ b/sys/dev/video/bktr/bktr_core.c
@@ -92,6 +92,7 @@
 
 #include <sys/param.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #include <sys/kernel.h>
 #include <sys/lock.h>
 #include <sys/proc.h>
diff --git a/sys/gnu/vfs/ext2fs/ext2_lookup.c b/sys/gnu/vfs/ext2fs/ext2_lookup.c
index df9829b769..1312fc1e41 100644
--- a/sys/gnu/vfs/ext2fs/ext2_lookup.c
+++ b/sys/gnu/vfs/ext2fs/ext2_lookup.c
@@ -44,6 +44,7 @@
 
 #include <sys/param.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #include <sys/namei.h>
 #include <sys/buf.h>
 #include <sys/mount.h>
diff --git a/sys/gnu/vfs/ext2fs/ext2_quota.c b/sys/gnu/vfs/ext2fs/ext2_quota.c
index 2fc5e4ba13..7ac94ae371 100644
--- a/sys/gnu/vfs/ext2fs/ext2_quota.c
+++ b/sys/gnu/vfs/ext2fs/ext2_quota.c
@@ -35,6 +35,7 @@
 
 #include <sys/param.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #include <sys/kernel.h>
 #include <sys/malloc.h>
 #include <sys/fcntl.h>
diff --git a/sys/gnu/vfs/ext2fs/ext2_vnops.c b/sys/gnu/vfs/ext2fs/ext2_vnops.c
index 6db58421f2..5aa073ca6c 100644
--- a/sys/gnu/vfs/ext2fs/ext2_vnops.c
+++ b/sys/gnu/vfs/ext2fs/ext2_vnops.c
@@ -47,6 +47,7 @@
 
 #include <sys/param.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #include <sys/resourcevar.h>
 #include <sys/kernel.h>
 #include <sys/stat.h>
diff --git a/sys/kern/kern_fp.c b/sys/kern/kern_fp.c
index 94b57b8058..198d3976fc 100644
--- a/sys/kern/kern_fp.c
+++ b/sys/kern/kern_fp.c
@@ -45,6 +45,7 @@
 #include <sys/param.h>
 #include <sys/kernel.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #include <sys/malloc.h>
 #include <sys/sysproto.h>
 #include <sys/conf.h>
diff --git a/sys/kern/kern_ktrace.c b/sys/kern/kern_ktrace.c
index 7f9d1bb663..265eec7f2a 100644
--- a/sys/kern/kern_ktrace.c
+++ b/sys/kern/kern_ktrace.c
@@ -34,6 +34,7 @@
 
 #include <sys/param.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #include <sys/sysproto.h>
 #include <sys/kernel.h>
 #include <sys/proc.h>
diff --git a/sys/kern/kern_synch.c b/sys/kern/kern_synch.c
index 8f3e85f4ce..e135bb2a7c 100644
--- a/sys/kern/kern_synch.c
+++ b/sys/kern/kern_synch.c
@@ -46,7 +46,6 @@
 #include <sys/vmmeter.h>
 #include <sys/sysctl.h>
 #include <sys/lock.h>
-#include <sys/uio.h>
 #include <sys/priv.h>
 #include <sys/kcollect.h>
 #ifdef KTRACE
diff --git a/sys/kern/kern_udev.c b/sys/kern/kern_udev.c
index 2a069fdaa6..9aa239cedd 100644
--- a/sys/kern/kern_udev.c
+++ b/sys/kern/kern_udev.c
@@ -33,6 +33,7 @@
  */
 #include <sys/param.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #include <sys/kernel.h>
 #include <sys/proc.h>
 #include <sys/buf.h>
diff --git a/sys/kern/kern_xio.c b/sys/kern/kern_xio.c
index 9749ed2c73..b789dac4e2 100644
--- a/sys/kern/kern_xio.c
+++ b/sys/kern/kern_xio.c
@@ -30,8 +30,6 @@
  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
  * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
  * SUCH DAMAGE.
- * 
- * $DragonFly: src/sys/kern/kern_xio.c,v 1.16 2008/05/09 07:24:45 dillon Exp $
  */
 /*
  * Kernel XIO interface.  An initialized XIO is basically a collection of
@@ -49,6 +47,7 @@
 
 #include <sys/param.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #include <sys/malloc.h>
 #include <sys/proc.h>
 #include <sys/vmmeter.h>
diff --git a/sys/kern/subr_log.c b/sys/kern/subr_log.c
index b6aa9e802f..060d5fe5de 100644
--- a/sys/kern/subr_log.c
+++ b/sys/kern/subr_log.c
@@ -36,6 +36,7 @@
 
 #include <sys/param.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #include <sys/conf.h>
 #include <sys/device.h>
 #include <sys/proc.h>
diff --git a/sys/kern/sys_generic.c b/sys/kern/sys_generic.c
index ca5a55606b..ae1befb1ce 100644
--- a/sys/kern/sys_generic.c
+++ b/sys/kern/sys_generic.c
@@ -48,10 +48,10 @@
 #include <sys/proc.h>
 #include <sys/signalvar.h>
 #include <sys/socketvar.h>
+#include <sys/malloc.h>
 #include <sys/uio.h>
 #include <sys/kernel.h>
 #include <sys/kern_syscall.h>
-#include <sys/malloc.h>
 #include <sys/mapped_ioctl.h>
 #include <sys/poll.h>
 #include <sys/queue.h>
diff --git a/sys/kern/sys_process.c b/sys/kern/sys_process.c
index 625aef1acf..fc5453f878 100644
--- a/sys/kern/sys_process.c
+++ b/sys/kern/sys_process.c
@@ -34,6 +34,7 @@
 #include <sys/param.h>
 #include <sys/systm.h>
 #include <sys/sysproto.h>
+#include <sys/uio.h>
 #include <sys/proc.h>
 #include <sys/priv.h>
 #include <sys/vnode.h>
diff --git a/sys/kern/tty.c b/sys/kern/tty.c
index 6641b3ae44..5443f977ae 100644
--- a/sys/kern/tty.c
+++ b/sys/kern/tty.c
@@ -75,6 +75,7 @@
 
 #include <sys/param.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #include <sys/filio.h>
 #include <sys/proc.h>
 #include <sys/priv.h>
diff --git a/sys/kern/tty_pty.c b/sys/kern/tty_pty.c
index 1cc6147ffa..787e4c1b97 100644
--- a/sys/kern/tty_pty.c
+++ b/sys/kern/tty_pty.c
@@ -44,6 +44,7 @@
 
 #include <sys/param.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #include <sys/proc.h>
 #include <sys/priv.h>
 #include <sys/tty.h>
diff --git a/sys/kern/vfs_cache.c b/sys/kern/vfs_cache.c
index d8a0af686a..b9f206e028 100644
--- a/sys/kern/vfs_cache.c
+++ b/sys/kern/vfs_cache.c
@@ -64,6 +64,7 @@
 
 #include <sys/param.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #include <sys/kernel.h>
 #include <sys/sysctl.h>
 #include <sys/mount.h>
diff --git a/sys/kern/vfs_helper.c b/sys/kern/vfs_helper.c
index f56d36f915..03dea506be 100644
--- a/sys/kern/vfs_helper.c
+++ b/sys/kern/vfs_helper.c
@@ -34,7 +34,6 @@
  * SUCH DAMAGE.
  *
  * @(#)ufs_vnops.c	8.27 (Berkeley) 5/27/95
- * $DragonFly: src/sys/kern/vfs_helper.c,v 1.5 2008/05/25 18:34:46 dillon Exp $
  */
 
 #include "opt_quota.h"
@@ -42,6 +41,7 @@
 
 #include <sys/param.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #include <sys/conf.h>
 #include <sys/kernel.h>
 #include <sys/fcntl.h>
diff --git a/sys/kern/vfs_nlookup.c b/sys/kern/vfs_nlookup.c
index 2b0b2ba402..597bb6ec24 100644
--- a/sys/kern/vfs_nlookup.c
+++ b/sys/kern/vfs_nlookup.c
@@ -53,6 +53,7 @@
 
 #include <sys/param.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #include <sys/kernel.h>
 #include <sys/vnode.h>
 #include <sys/mount.h>
diff --git a/sys/kern/vfs_quota.c b/sys/kern/vfs_quota.c
index e3b6f9b42d..ffb51d8772 100644
--- a/sys/kern/vfs_quota.c
+++ b/sys/kern/vfs_quota.c
@@ -31,6 +31,7 @@
  */
 
 #include <sys/sysctl.h>
+#include <sys/malloc.h>
 #include <sys/mount.h>
 #include <sys/systm.h>
 #include <sys/nlookup.h>
diff --git a/sys/kern/vfs_subr.c b/sys/kern/vfs_subr.c
index 128aa0f1ad..0838473332 100644
--- a/sys/kern/vfs_subr.c
+++ b/sys/kern/vfs_subr.c
@@ -44,6 +44,7 @@
 
 #include <sys/param.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #include <sys/buf.h>
 #include <sys/conf.h>
 #include <sys/dirent.h>
diff --git a/sys/kern/vfs_vnops.c b/sys/kern/vfs_vnops.c
index a614c4eb3e..dd75370303 100644
--- a/sys/kern/vfs_vnops.c
+++ b/sys/kern/vfs_vnops.c
@@ -37,6 +37,7 @@
 
 #include <sys/param.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #include <sys/fcntl.h>
 #include <sys/file.h>
 #include <sys/stat.h>
diff --git a/sys/net/bpf.c b/sys/net/bpf.c
index b9ca2e84a2..df0c698cd3 100644
--- a/sys/net/bpf.c
+++ b/sys/net/bpf.c
@@ -40,6 +40,7 @@
 
 #include <sys/param.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #include <sys/conf.h>
 #include <sys/device.h>
 #include <sys/malloc.h>
@@ -728,7 +729,7 @@ bpfioctl(struct dev_ioctl_args *ap)
 		case BIOCGBLEN:
 		case BIOCFLUSH:
 		case BIOCGDLT:
-		case BIOCGDLTLIST: 
+		case BIOCGDLTLIST:
 		case BIOCGETIF:
 		case BIOCGRTIMEOUT:
 		case BIOCGSTATS:
@@ -811,7 +812,7 @@ bpfioctl(struct dev_ioctl_args *ap)
 	 */
 	case BIOCSETF:
 	case BIOCSETWF:
-		error = bpf_setf(d, (struct bpf_program *)ap->a_data, 
+		error = bpf_setf(d, (struct bpf_program *)ap->a_data,
 			ap->a_cmd);
 		break;
 
diff --git a/sys/platform/vkernel64/x86_64/trap.c b/sys/platform/vkernel64/x86_64/trap.c
index df3babab9e..e766087ce6 100644
--- a/sys/platform/vkernel64/x86_64/trap.c
+++ b/sys/platform/vkernel64/x86_64/trap.c
@@ -58,7 +58,6 @@
 #include <sys/syscall.h>
 #include <sys/sysctl.h>
 #include <sys/sysent.h>
-#include <sys/uio.h>
 #include <sys/vmmeter.h>
 #include <sys/malloc.h>
 #ifdef KTRACE
diff --git a/sys/sys/_uio.h b/sys/sys/_uio.h
new file mode 100644
index 0000000000..9183312b00
--- /dev/null
+++ b/sys/sys/_uio.h
@@ -0,0 +1,76 @@
+/*
+ * Copyright (c) 1982, 1986, 1993, 1994
+ *	The Regents of the University of California.  All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in the
+ *    documentation and/or other materials provided with the distribution.
+ * 3. Neither the name of the University nor the names of its contributors
+ *    may be used to endorse or promote products derived from this software
+ *    without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+ * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+ * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
+ * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
+ * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
+ * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
+ * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+ * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
+ * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
+ * SUCH DAMAGE.
+ *
+ *	@(#)uio.h	8.5 (Berkeley) 2/22/94
+ */
+
+#ifndef _SYS__UIO_H_
+#define	_SYS__UIO_H_
+
+/*
+ * Do not include this header outside _KERNEL or _KERNEL_STRUCTURES scopes.
+ * Used in <sys/user.h>.
+ */
+
+#if defined(_KERNEL) || defined(_KERNEL_STRUCTURES)
+enum uio_rw {
+	UIO_READ,
+	UIO_WRITE
+};
+
+/* Segment flag values. */
+enum uio_seg {
+	UIO_USERSPACE,		/* from user data space */
+	UIO_SYSSPACE,		/* from system space */
+	UIO_NOCOPY		/* don't copy, already in object */
+};
+
+struct iovec;
+struct thread;
+
+/*
+ * uio_td is primarily used for USERSPACE transfers, but some devices
+ * like ttys may also use it to get at the process.
+ *
+ * NOTE: uio_resid: Previously used int and FreeBSD decided to use ssize_t,
+ *	 but after reviewing use cases and in particular the fact that the
+ *	 iov uses an unsigned quantity, DragonFly will use the (unsigned)
+ *	 size_t.
+ */
+struct uio {
+	struct	iovec *uio_iov;
+	int	uio_iovcnt;
+	off_t	uio_offset;
+	size_t	uio_resid;
+	enum	uio_seg uio_segflg;
+	enum	uio_rw uio_rw;
+	struct	thread *uio_td;
+};
+#endif /* _KERNEL || _KERNEL_STRUCTURES */
+
+#endif /* !_SYS__UIO_H_ */
diff --git a/sys/sys/file.h b/sys/sys/file.h
index f3b396492b..23dbe6a065 100644
--- a/sys/sys/file.h
+++ b/sys/sys/file.h
@@ -57,8 +57,8 @@
 #ifndef _SYS_NAMECACHE_H_
 #include <sys/namecache.h>
 #endif
-#ifndef _SYS_UIO_H_
-#include <sys/uio.h>
+#ifndef _SYS__UIO_H_
+#include <sys/_uio.h>
 #endif
 
 struct stat;
diff --git a/sys/sys/kern_syscall.h b/sys/sys/kern_syscall.h
index a554a0da4e..b1f4ed3213 100644
--- a/sys/sys/kern_syscall.h
+++ b/sys/sys/kern_syscall.h
@@ -35,7 +35,7 @@
 
 #include <sys/signal.h>
 #include <sys/wait.h>
-#include <sys/uio.h>
+#include <sys/_uio.h>
 
 #define DUP_FIXED	0x1	/* Copy to specific fd even if in use */
 #define DUP_VARIABLE	0x2	/* Copy fd to an unused fd */
diff --git a/sys/sys/ktrace.h b/sys/sys/ktrace.h
index c2a5a71b78..9658668aa0 100644
--- a/sys/sys/ktrace.h
+++ b/sys/sys/ktrace.h
@@ -28,7 +28,6 @@
  *
  *	@(#)ktrace.h	8.1 (Berkeley) 6/2/93
  * $FreeBSD: src/sys/sys/ktrace.h,v 1.19.2.3 2001/01/06 09:58:23 alfred Exp $
- * $DragonFly: src/sys/sys/ktrace.h,v 1.10 2008/04/14 12:01:53 dillon Exp $
  */
 
 #ifndef _SYS_KTRACE_H_
@@ -40,9 +39,6 @@
 #ifndef _SYS_TIME_H_
 #include <sys/time.h>
 #endif
-#ifndef _SYS_UIO_H_
-#include <sys/uio.h>
-#endif
 #ifndef _SYS_SIGNAL_H_
 #include <sys/signal.h>
 #endif
@@ -135,6 +131,8 @@ struct ktr_sysret {
  * KTR_GENIO - trace generic process i/o
  */
 #define KTR_GENIO	4
+#if defined(_KERNEL) || defined(_KERNEL_STRUCTURES)
+#include <sys/_uio.h>		/* enum uio_rw, struct uio */
 struct ktr_genio {
 	int	ktr_fd;
 	enum	uio_rw ktr_rw;
@@ -142,6 +140,7 @@ struct ktr_genio {
 	 * followed by data successfully read/written
 	 */
 };
+#endif
 
 /*
  * KTR_PSIG - trace processed signal
diff --git a/sys/sys/malloc.h b/sys/sys/malloc.h
index 30d8166b51..fd572256c6 100644
--- a/sys/sys/malloc.h
+++ b/sys/sys/malloc.h
@@ -59,7 +59,7 @@
 #define	M_CACHEALIGN	0x4000	/* force CPU cache line alignment */
 
 /*
- * M_NOWAIT has to be a set of flags for equivalence to prior use. 
+ * M_NOWAIT has to be a set of flags for equivalence to prior use.
  *
  * M_SYSALLOC should be used for any critical infrastructure allocations
  * made by the kernel proper.
@@ -70,7 +70,7 @@
  *
  * NOTE ON DRAGONFLY USE OF M_NOWAIT.  In FreeBSD M_NOWAIT allocations
  * almost always succeed.  In DragonFly, however, there is a good chance
- * that an allocation will fail.  M_NOWAIT should only be used when 
+ * that an allocation will fail.  M_NOWAIT should only be used when
  * allocations can fail without any serious detriment to the system.
  *
  * Note that allocations made from (preempted) interrupts will attempt to
@@ -160,13 +160,6 @@ MALLOC_DECLARE(M_IP6NDP); /* for INET6 */
 
 #define	MINALLOCSIZE	sizeof(void *)
 
-/*
- * XXX this should be declared in <sys/uio.h>, but that tends to fail
- * because <sys/uio.h> is included in a header before the source file
- * has a chance to include <sys/malloc.h> to get MALLOC_DECLARE() defined.
- */
-MALLOC_DECLARE(M_IOV);
-
 /* XXX struct malloc_type is unused for contig*(). */
 size_t  kmem_lim_size(void);
 void	contigfree(void *addr, unsigned long size, struct malloc_type *type)
diff --git a/sys/sys/msgport.h b/sys/sys/msgport.h
index d7591b30bd..9917555d56 100644
--- a/sys/sys/msgport.h
+++ b/sys/sys/msgport.h
@@ -17,14 +17,6 @@
 #include <sys/spinlock.h>
 #endif
 
-#ifdef _KERNEL
-
-#ifndef _SYS_MALLOC_H_
-#include <sys/malloc.h>
-#endif
-
-#endif
-
 struct lwkt_msg;
 struct lwkt_port;
 struct lwkt_serialize;
@@ -112,10 +104,6 @@ typedef struct lwkt_msg {
 #define MSG_CMD_SYSCALL	0x00030000
 #define MSG_SUBCMD_MASK	0x0000FFFF
 
-#ifdef _KERNEL
-MALLOC_DECLARE(M_LWKTMSG);
-#endif
-
 /*
  * Notes on port processing requirements:
  *
diff --git a/sys/sys/msgport2.h b/sys/sys/msgport2.h
index 9f63216b04..b5e2035cdd 100644
--- a/sys/sys/msgport2.h
+++ b/sys/sys/msgport2.h
@@ -11,7 +11,14 @@
 #error "This file should not be included by userland programs."
 #endif
 
+#ifndef _SYS_SYSTM_H_
 #include <sys/systm.h>
+#endif
+#ifndef _SYS_MALLOC_H_
+#include <sys/malloc.h>
+#endif
+
+MALLOC_DECLARE(M_LWKTMSG);
 
 /*
  * Initialize a LWKT message structure.  Note that if the message supports
@@ -42,7 +49,7 @@ lwkt_initmsg_abortable(lwkt_msg_t msg, lwkt_port_t rport, int flags,
 static __inline
 void
 lwkt_replymsg(lwkt_msg_t msg, int error)
-{   
+{
     lwkt_port_t port;
 
     msg->ms_error = error;
@@ -54,7 +61,7 @@ lwkt_replymsg(lwkt_msg_t msg, int error)
  * Retrieve the next message from the port's message queue, return NULL
  * if no messages are pending.  The retrieved message will either be a
  * request or a reply based on the MSGF_REPLY bit.
- * 
+ *
  * If the backend port is a thread port, the the calling thread MUST
  * own the port.
  */
diff --git a/sys/sys/namei.h b/sys/sys/namei.h
index 48ed178c60..2b62fd2a14 100644
--- a/sys/sys/namei.h
+++ b/sys/sys/namei.h
@@ -28,14 +28,12 @@
  *
  *	@(#)namei.h	8.5 (Berkeley) 1/9/95
  * $FreeBSD: src/sys/sys/namei.h,v 1.29.2.2 2001/09/30 21:12:54 luigi Exp $
- * $DragonFly: src/sys/sys/namei.h,v 1.15 2004/11/12 00:09:27 dillon Exp $
  */
 
 #ifndef _SYS_NAMEI_H_
 #define	_SYS_NAMEI_H_
 
 #include <sys/queue.h>
-#include <sys/uio.h>
 
 #ifdef _KERNEL
 #ifndef _SYS_THREAD_H_
diff --git a/sys/sys/nlookup.h b/sys/sys/nlookup.h
index 81f4844c01..cef08da283 100644
--- a/sys/sys/nlookup.h
+++ b/sys/sys/nlookup.h
@@ -1,13 +1,13 @@
 /*
  * Copyright (c) 2004 The DragonFly Project.  All rights reserved.
- * 
+ *
  * This code is derived from software contributed to The DragonFly Project
  * by Matthew Dillon <dillon@backplane.com>
- * 
+ *
  * Redistribution and use in source and binary forms, with or without
  * modification, are permitted provided that the following conditions
  * are met:
- * 
+ *
  * 1. Redistributions of source code must retain the above copyright
  *    notice, this list of conditions and the following disclaimer.
  * 2. Redistributions in binary form must reproduce the above copyright
@@ -17,7 +17,7 @@
  * 3. Neither the name of The DragonFly Project nor the names of its
  *    contributors may be used to endorse or promote products derived
  *    from this software without specific, prior written permission.
- * 
+ *
  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
@@ -30,16 +30,11 @@
  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
  * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
  * SUCH DAMAGE.
- *
- * $DragonFly: src/sys/sys/nlookup.h,v 1.6 2008/05/09 17:52:18 dillon Exp $
  */
 
 #ifndef _SYS_NLOOKUP_H_
 #define	_SYS_NLOOKUP_H_
 
-#ifndef _SYS_UIO_H_
-#include <sys/uio.h>
-#endif
 #ifndef _SYS_NAMECACHE_H_
 #include <sys/namecache.h>
 #endif
@@ -57,14 +52,14 @@ struct ucred;
  * nlookup component
  */
 struct nlcomponent {
-	char 		*nlc_nameptr;
+	char		*nlc_nameptr;
 	int		nlc_namelen;
 };
 
 /*
  * Encapsulation of nlookup parameters.
  *
- * Note on nl_flags and nl_op: nl_flags supports a simplified subset of 
+ * Note on nl_flags and nl_op: nl_flags supports a simplified subset of
  * namei's original CNP flags.  nl_op (e.g. NAMEI_*) does no in any way
  * effect the state of the returned namecache and is only used to enforce
  * access checks.
@@ -80,7 +75,7 @@ struct nlookupdata {
 	struct nchandle nl_rootnch;	/* root directory */
 	struct nchandle nl_jailnch;	/* jail directory */
 
-	char 		*nl_path;	/* path buffer */
+	char		*nl_path;	/* path buffer */
 	struct thread	*nl_td;		/* thread requesting the nlookup */
 	struct ucred	*nl_cred;	/* credentials for nlookup */
 	struct vnode	*nl_dvp;	/* NLC_REFDVP */
@@ -93,7 +88,7 @@ struct nlookupdata {
 	 * vn_close() a non-NULL vp so if you extract it be sure to NULL out
 	 * nl_open_vp.
 	 */
-	struct  vnode	*nl_open_vp;	
+	struct vnode	*nl_open_vp;
 	int		nl_vp_fmode;
 };
 
@@ -145,23 +140,25 @@ struct nlookupdata {
 				 NLC_READ | NLC_WRITE | NLC_EXEC | NLC_OWN)
 
 #ifdef _KERNEL
-
-int nlookup_init(struct nlookupdata *, const char *, enum uio_seg, int);
-int nlookup_init_at(struct nlookupdata *, struct file **, int, const char *, 
-		enum uio_seg, int);
-int nlookup_init_raw(struct nlookupdata *, const char *, enum uio_seg, int, struct ucred *, struct nchandle *);
-int nlookup_init_root(struct nlookupdata *, const char *, enum uio_seg, int, struct ucred *, struct nchandle *, struct nchandle *);
-void nlookup_zero(struct nlookupdata *);
-void nlookup_done(struct nlookupdata *);
-void nlookup_done_at(struct nlookupdata *, struct file *);
-struct nchandle nlookup_simple(const char *str, enum uio_seg seg, 
-				int niflags, int *error);
-int nlookup_mp(struct mount *mp, struct nchandle *nch);
-int nlookup(struct nlookupdata *);
-int nreadsymlink(struct nlookupdata *nd, struct nchandle *nch, 
-				struct nlcomponent *nlc);
-int naccess_va(struct vattr *va, int nflags, struct ucred *cred);
-
+#include <sys/_uio.h>
+
+int	naccess_va(struct vattr *va, int nflags, struct ucred *cred);
+int	nlookup(struct nlookupdata *);
+void	nlookup_done(struct nlookupdata *);
+void	nlookup_done_at(struct nlookupdata *, struct file *);
+int	nlookup_init(struct nlookupdata *, const char *, enum uio_seg, int);
+int	nlookup_init_at(struct nlookupdata *, struct file **, int,
+	    const char *, enum uio_seg, int);
+int	nlookup_init_raw(struct nlookupdata *, const char *, enum uio_seg,
+	    int, struct ucred *, struct nchandle *);
+int	nlookup_init_root(struct nlookupdata *, const char *, enum uio_seg,
+	    int, struct ucred *, struct nchandle *, struct nchandle *);
+int	nlookup_mp(struct mount *mp, struct nchandle *nch);
+struct nchandle nlookup_simple(const char *str, enum uio_seg seg,
+	    int niflags, int *error);
+void	nlookup_zero(struct nlookupdata *);
+int	nreadsymlink(struct nlookupdata *nd, struct nchandle *nch,
+	    struct nlcomponent *nlc);
 #endif
 
 #endif /* !_SYS_NAMEI_H_ */
diff --git a/sys/sys/uio.h b/sys/sys/uio.h
index aca9068b8e..5083afc27f 100644
--- a/sys/sys/uio.h
+++ b/sys/sys/uio.h
@@ -35,51 +35,23 @@
 
 #include <sys/cdefs.h>
 #include <sys/_iovec.h>
-#if __BSD_VISIBLE
-#include <sys/param.h>
+
+#ifdef __BSD_VISIBLE
+#ifndef _OFF_T_DECLARED
+typedef	__off_t		off_t;
+#define	_OFF_T_DECLARED
 #endif
-#if defined(_KERNEL)
-#include <sys/malloc.h>		/* Needed to inline iovec_free(). */
 #endif
 
+/* The size_t and __ types are expected to be provided by <sys/_iovec.h> */
+
 #ifndef _SSIZE_T_DECLARED
 typedef	__ssize_t	ssize_t;
 #define	_SSIZE_T_DECLARED
 #endif
 
-#if __BSD_VISIBLE
-enum	uio_rw { UIO_READ, UIO_WRITE };
-
-/* Segment flag values. */
-enum uio_seg {
-	UIO_USERSPACE,		/* from user data space */
-	UIO_SYSSPACE,		/* from system space */
-	UIO_NOCOPY		/* don't copy, already in object */
-};
-#endif
-
 #if defined(_KERNEL) || defined(_KERNEL_STRUCTURES)
-
-/*
- * uio_td is primarily used for USERSPACE transfers, but some devices
- * like ttys may also use it to get at the process.
- *
- * NOTE: uio_resid: Previously used int and FreeBSD decided to use ssize_t,
- *	 but after reviewing use cases and in particular the fact that the
- *	 iov uses an unsigned quantity, DragonFly will use the (unsigned)
- *	 size_t.
- */
-struct buf;
-
-struct uio {
-	struct	iovec *uio_iov;
-	int	uio_iovcnt;
-	off_t	uio_offset;
-	size_t	uio_resid;
-	enum	uio_seg uio_segflg;
-	enum	uio_rw uio_rw;
-	struct	thread *uio_td;
-};
+#include <sys/_uio.h>			/* struct uio and enums */
 
 /*
  * Limits
@@ -87,10 +59,10 @@ struct uio {
 #define UIO_MAXIOV	1024		/* max 1K of iov's */
 #define UIO_SMALLIOV	8		/* 8 on stack, else malloc */
 
-#endif
+#endif /* _KERNEL || _KERNEL_STRUCTURES */
 
 #if defined(_KERNEL)
-
+struct buf;
 struct vm_object;
 struct vm_page;
 
@@ -105,6 +77,12 @@ int	uioread (int, struct uio *, struct vm_object *, int *);
 int	iovec_copyin(const struct iovec *, struct iovec **, struct iovec *,
 			    int, size_t *);
 
+#ifdef MALLOC_DECLARE
+MALLOC_DECLARE(M_IOV);	/* only if <sys/malloc.h> included before! */
+#endif
+
+#ifdef MALLOC_DEFINE
+#include <sys/_null.h>			/* XXX, visibility */
 /*
  * MPSAFE
  */
@@ -116,9 +94,10 @@ iovec_free(struct iovec **kiov, struct iovec *siov)
 		*kiov = NULL;
 	}
 }
+#endif
+#endif /* _KERNEL */
 
-#else /* !_KERNEL */
-
+#ifndef _KERNEL
 __BEGIN_DECLS
 ssize_t	readv(int, const struct iovec *, int);
 ssize_t	writev(int, const struct iovec *, int);
@@ -127,7 +106,6 @@ ssize_t	preadv(int, const struct iovec *, int, off_t);
 ssize_t	pwritev(int, const struct iovec *, int, off_t);
 #endif
 __END_DECLS
-
-#endif /* _KERNEL */
+#endif /* !_KERNEL */
 
 #endif /* !_SYS_UIO_H_ */
diff --git a/sys/sys/user.h b/sys/sys/user.h
index f34e5aa702..a123575f59 100644
--- a/sys/sys/user.h
+++ b/sys/sys/user.h
@@ -61,8 +61,11 @@
 #ifndef _SYS_UCRED_H_
 #include <sys/ucred.h>
 #endif
-#ifndef _SYS_UIO_H_
-#include <sys/uio.h>
+#ifndef _SYS__IOVEC_H_
+#include <sys/_iovec.h>
+#endif
+#ifndef _SYS__UIO_H_
+#include <sys/_uio.h>
 #endif
 #ifndef _SYS_PROC_H_
 #include <sys/proc.h>
diff --git a/sys/sys/vnode.h b/sys/sys/vnode.h
index 0ca5249444..81ee33e3e9 100644
--- a/sys/sys/vnode.h
+++ b/sys/sys/vnode.h
@@ -47,8 +47,8 @@
 #ifndef _SYS_BIOTRACK_H_
 #include <sys/biotrack.h>
 #endif
-#ifndef _SYS_UIO_H_
-#include <sys/uio.h>
+#ifndef _SYS__UIO_H_
+#include <sys/_uio.h>
 #endif
 #ifndef _SYS_ACL_H_
 #include <sys/acl.h>
diff --git a/sys/sys/xio.h b/sys/sys/xio.h
index 68fdf0c768..7f6212a4d6 100644
--- a/sys/sys/xio.h
+++ b/sys/sys/xio.h
@@ -30,8 +30,6 @@
  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
  * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
  * SUCH DAMAGE.
- * 
- * $DragonFly: src/sys/sys/xio.h,v 1.10 2007/08/13 17:20:05 dillon Exp $
  */
 
 /*
@@ -55,8 +53,8 @@
 #ifndef _SYS_TYPES_H_
 #include <sys/types.h>
 #endif
-#ifndef _SYS_UIO_H_
-#include <sys/uio.h>
+#ifndef _SYS__UIO_H_
+#include <sys/_uio.h>
 #endif
 #ifndef _SYS_MSGPORT_H_
 #include <sys/msgport.h>
diff --git a/sys/vfs/hammer/hammer.h b/sys/vfs/hammer/hammer.h
index d6d975be9e..b8dc78d0b5 100644
--- a/sys/vfs/hammer/hammer.h
+++ b/sys/vfs/hammer/hammer.h
@@ -44,6 +44,7 @@
 #ifdef _KERNEL
 #include <sys/kernel.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #endif
 #include <sys/conf.h>
 #include <sys/tree.h>
diff --git a/sys/vfs/hpfs/hpfs_vnops.c b/sys/vfs/hpfs/hpfs_vnops.c
index 364b7b1505..4f059fb0a5 100644
--- a/sys/vfs/hpfs/hpfs_vnops.c
+++ b/sys/vfs/hpfs/hpfs_vnops.c
@@ -28,6 +28,7 @@
 
 #include <sys/param.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #include <sys/kernel.h>
 #include <sys/proc.h>
 #include <sys/priv.h>
diff --git a/sys/vfs/isofs/cd9660/cd9660_vnops.c b/sys/vfs/isofs/cd9660/cd9660_vnops.c
index 70a33427c4..464fc342f8 100644
--- a/sys/vfs/isofs/cd9660/cd9660_vnops.c
+++ b/sys/vfs/isofs/cd9660/cd9660_vnops.c
@@ -37,6 +37,7 @@
 
 #include <sys/param.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #include <sys/proc.h>
 #include <sys/namei.h>
 #include <sys/kernel.h>
diff --git a/sys/vfs/msdosfs/msdosfs_vnops.c b/sys/vfs/msdosfs/msdosfs_vnops.c
index 5b044badbd..26bd0e08c7 100644
--- a/sys/vfs/msdosfs/msdosfs_vnops.c
+++ b/sys/vfs/msdosfs/msdosfs_vnops.c
@@ -52,6 +52,7 @@
 
 #include <sys/param.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #include <sys/resourcevar.h>	/* defines plimit structure in proc struct */
 #include <sys/kernel.h>
 #include <sys/stat.h>
diff --git a/sys/vfs/nfs/nfs_bio.c b/sys/vfs/nfs/nfs_bio.c
index ba9c7265de..2faea0e36e 100644
--- a/sys/vfs/nfs/nfs_bio.c
+++ b/sys/vfs/nfs/nfs_bio.c
@@ -36,6 +36,7 @@
 
 #include <sys/param.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #include <sys/resourcevar.h>
 #include <sys/signalvar.h>
 #include <sys/proc.h>
diff --git a/sys/vfs/nfs/nfs_vnops.c b/sys/vfs/nfs/nfs_vnops.c
index 0065f3862e..a23e220a04 100644
--- a/sys/vfs/nfs/nfs_vnops.c
+++ b/sys/vfs/nfs/nfs_vnops.c
@@ -43,6 +43,7 @@
 #include <sys/param.h>
 #include <sys/kernel.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #include <sys/resourcevar.h>
 #include <sys/proc.h>
 #include <sys/mount.h>
diff --git a/sys/vfs/ntfs/ntfs_subr.c b/sys/vfs/ntfs/ntfs_subr.c
index 662c64073a..fd5d5b1072 100644
--- a/sys/vfs/ntfs/ntfs_subr.c
+++ b/sys/vfs/ntfs/ntfs_subr.c
@@ -31,6 +31,7 @@
 #include <sys/param.h>
 #include <sys/types.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #include <sys/proc.h>
 #include <sys/namei.h>
 #include <sys/kernel.h>
diff --git a/sys/vfs/ntfs/ntfs_vnops.c b/sys/vfs/ntfs/ntfs_vnops.c
index 12e8ac5206..ff47b19614 100644
--- a/sys/vfs/ntfs/ntfs_vnops.c
+++ b/sys/vfs/ntfs/ntfs_vnops.c
@@ -37,6 +37,7 @@
 
 #include <sys/param.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #include <sys/kernel.h>
 #include <sys/time.h>
 #include <sys/types.h>
diff --git a/sys/vfs/procfs/procfs_dbregs.c b/sys/vfs/procfs/procfs_dbregs.c
index d7f06ceb5f..f7c0f46da4 100644
--- a/sys/vfs/procfs/procfs_dbregs.c
+++ b/sys/vfs/procfs/procfs_dbregs.c
@@ -37,10 +37,10 @@
  * SUCH DAMAGE.
  *
  * $FreeBSD: src/sys/miscfs/procfs/procfs_dbregs.c,v 1.4.2.3 2002/01/22 17:22:59 nectar Exp $
- * $DragonFly: src/sys/vfs/procfs/procfs_dbregs.c,v 1.10 2007/02/19 01:14:24 corecode Exp $
  */
 
 #include <sys/param.h>
+#include <sys/uio.h>
 #include <sys/proc.h>
 #include <sys/priv.h>
 #include <sys/vnode.h>
@@ -56,7 +56,7 @@ procfs_dodbregs(struct proc *curp, struct lwp *lp, struct pfsnode *pfs,
 	int error;
 	struct dbreg r;
 
-	/* Can't trace a process that's currently exec'ing. */ 
+	/* Can't trace a process that's currently exec'ing. */
 	if ((p->p_flags & P_INEXEC) != 0)
 		return EAGAIN;
 	if (!CHECKIO(curp, p) || p_trespass(curp->p_ucred, p->p_ucred))
diff --git a/sys/vfs/procfs/procfs_fpregs.c b/sys/vfs/procfs/procfs_fpregs.c
index 6941e9143e..d6430b2073 100644
--- a/sys/vfs/procfs/procfs_fpregs.c
+++ b/sys/vfs/procfs/procfs_fpregs.c
@@ -34,10 +34,10 @@
  *
  * From:
  * $FreeBSD: src/sys/miscfs/procfs/procfs_fpregs.c,v 1.11.2.3 2002/01/22 17:22:59 nectar Exp $
- * $DragonFly: src/sys/vfs/procfs/procfs_fpregs.c,v 1.10 2007/02/19 01:14:24 corecode Exp $
  */
 
 #include <sys/param.h>
+#include <sys/uio.h>
 #include <sys/proc.h>
 #include <sys/priv.h>
 #include <sys/vnode.h>
@@ -53,7 +53,7 @@ procfs_dofpregs(struct proc *curp, struct lwp *lp, struct pfsnode *pfs,
 	int error;
 	struct fpreg r;
 
-	/* Can't trace a process that's currently exec'ing. */ 
+	/* Can't trace a process that's currently exec'ing. */
 	if ((p->p_flags & P_INEXEC) != 0)
 		return EAGAIN;
 	if (!CHECKIO(curp, p) || p_trespass(curp->p_ucred, p->p_ucred))
diff --git a/sys/vfs/procfs/procfs_map.c b/sys/vfs/procfs/procfs_map.c
index ef26bccf11..690458fb87 100644
--- a/sys/vfs/procfs/procfs_map.c
+++ b/sys/vfs/procfs/procfs_map.c
@@ -33,11 +33,11 @@
  *	@(#)procfs_status.c	8.3 (Berkeley) 2/17/94
  *
  * $FreeBSD: src/sys/miscfs/procfs/procfs_map.c,v 1.24.2.1 2001/08/04 13:12:24 rwatson Exp $
- * $DragonFly: src/sys/vfs/procfs/procfs_map.c,v 1.7 2007/02/19 01:14:24 corecode Exp $
  */
 
 #include <sys/param.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #include <sys/proc.h>
 #include <sys/vnode.h>
 #include <sys/sbuf.h>
diff --git a/sys/vfs/procfs/procfs_mem.c b/sys/vfs/procfs/procfs_mem.c
index 1d28c57cae..7c4c10dd86 100644
--- a/sys/vfs/procfs/procfs_mem.c
+++ b/sys/vfs/procfs/procfs_mem.c
@@ -43,6 +43,7 @@
 
 #include <sys/param.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #include <sys/proc.h>
 #include <sys/priv.h>
 #include <sys/vnode.h>
diff --git a/sys/vfs/procfs/procfs_regs.c b/sys/vfs/procfs/procfs_regs.c
index e6485e4576..d50a03238b 100644
--- a/sys/vfs/procfs/procfs_regs.c
+++ b/sys/vfs/procfs/procfs_regs.c
@@ -34,10 +34,10 @@
  *
  * From:
  * $FreeBSD: src/sys/miscfs/procfs/procfs_regs.c,v 1.10.2.3 2002/01/22 17:22:59 nectar Exp $
- * $DragonFly: src/sys/vfs/procfs/procfs_regs.c,v 1.11 2007/02/19 01:14:24 corecode Exp $
  */
 
 #include <sys/param.h>
+#include <sys/uio.h>
 #include <sys/proc.h>
 #include <sys/priv.h>
 #include <sys/vnode.h>
@@ -54,7 +54,7 @@ procfs_doregs(struct proc *curp, struct lwp *lp, struct pfsnode *pfs,
 	int error;
 	struct reg r;
 
-	/* Can't trace a process that's currently exec'ing. */ 
+	/* Can't trace a process that's currently exec'ing. */
 	if ((p->p_flags & P_INEXEC) != 0)
 		return EAGAIN;
 	if (!CHECKIO(curp, p) || p_trespass(curp->p_ucred, p->p_ucred))
diff --git a/sys/vfs/procfs/procfs_rlimit.c b/sys/vfs/procfs/procfs_rlimit.c
index 49e579282a..539ea3772d 100644
--- a/sys/vfs/procfs/procfs_rlimit.c
+++ b/sys/vfs/procfs/procfs_rlimit.c
@@ -33,7 +33,6 @@
  *	@(#)procfs_status.c	8.4 (Berkeley) 6/15/94
  *
  * $FreeBSD: src/sys/miscfs/procfs/procfs_rlimit.c,v 1.5 1999/12/08 08:59:37 phk Exp $
- * $DragonFly: src/sys/vfs/procfs/procfs_rlimit.c,v 1.7 2007/02/19 01:14:24 corecode Exp $
  */
 
 /*
@@ -44,6 +43,7 @@
 
 #include <sys/param.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #include <sys/proc.h>
 #include <sys/vnode.h>
 #include <sys/resourcevar.h>
@@ -76,7 +76,7 @@ procfs_dorlimit(struct proc *curp, struct lwp *lp, struct pfsnode *pfs,
 
 		ps += ksprintf(ps, "%s ", rlimit_ident[i]);
 
-		/* 
+		/*
 		 * Replace RLIM_INFINITY with -1 in the string
 		 */
 
diff --git a/sys/vfs/procfs/procfs_status.c b/sys/vfs/procfs/procfs_status.c
index 8b9ec6e799..627ba6ca60 100644
--- a/sys/vfs/procfs/procfs_status.c
+++ b/sys/vfs/procfs/procfs_status.c
@@ -38,6 +38,7 @@
 
 #include <sys/param.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #include <sys/malloc.h>
 #include <sys/proc.h>
 #include <sys/priv.h>
@@ -84,7 +85,7 @@ procfs_dostatus(struct proc *curp, struct lwp *lp, struct pfsnode *pfs,
 	sess = p->p_pgrp->pg_session;
 	sid = sess->s_leader ? sess->s_leader->p_pid : 0;
 
-/* comm pid ppid pgid sid maj,min ctty,sldr start ut st wmsg 
+/* comm pid ppid pgid sid maj,min ctty,sldr start ut st wmsg
                                 euid ruid rgid,egid,groups[1 .. NGROUPS]
 */
 	KASSERT(sizeof(psbuf) > MAXCOMLEN,
@@ -144,13 +145,13 @@ procfs_dostatus(struct proc *curp, struct lwp *lp, struct pfsnode *pfs,
 
 	cr = p->p_ucred;
 
-	ps += ksnprintf(ps, psbuf + sizeof(psbuf) - ps, " %lu %lu %lu", 
+	ps += ksnprintf(ps, psbuf + sizeof(psbuf) - ps, " %lu %lu %lu",
 		(u_long)cr->cr_uid,
 		(u_long)p->p_ucred->cr_ruid,
 		(u_long)p->p_ucred->cr_rgid);
 	DOCHECK();
 
-	/* egid (p->p_ucred->cr_svgid) is equal to cr_ngroups[0] 
+	/* egid (p->p_ucred->cr_svgid) is equal to cr_ngroups[0]
 	   see also getegid(2) in /sys/kern/kern_prot.c */
 
 	for (i = 0; i < cr->cr_ngroups; i++) {
@@ -191,7 +192,7 @@ procfs_docmdline(struct proc *curp, struct lwp *lp, struct pfsnode *pfs,
 
 	if (uio->uio_rw != UIO_READ)
 		return (EOPNOTSUPP);
-	
+
 	/*
 	 * If we are using the ps/cmdline caching, use that.  Otherwise
 	 * revert back to the old way which only implements full cmdline
diff --git a/sys/vfs/procfs/procfs_subr.c b/sys/vfs/procfs/procfs_subr.c
index 3cbb063706..a911692e4a 100644
--- a/sys/vfs/procfs/procfs_subr.c
+++ b/sys/vfs/procfs/procfs_subr.c
@@ -38,6 +38,7 @@
 #include <sys/param.h>
 #include <sys/systm.h>
 #include <sys/sysctl.h>
+#include <sys/uio.h>
 #include <sys/proc.h>
 #include <sys/mount.h>
 #include <sys/vnode.h>
@@ -77,7 +78,7 @@ MALLOC_DEFINE(M_PROCFS, "procfs", "procfs v_data");
  * A single lock is kept for the entire list.  this is needed because the
  * getnewvnode() function can block waiting for a vnode to become free,
  * in which case there may be more than one process trying to get the same
- * vnode.  this lock is only taken if we are going to call getnewvnode, 
+ * vnode.  this lock is only taken if we are going to call getnewvnode,
  * since the kernel itself is single-threaded.
  *
  * If an entry is found on the list, then call vget() to take a reference
diff --git a/sys/vfs/procfs/procfs_type.c b/sys/vfs/procfs/procfs_type.c
index 9c4faea7fb..8c012a854c 100644
--- a/sys/vfs/procfs/procfs_type.c
+++ b/sys/vfs/procfs/procfs_type.c
@@ -31,11 +31,11 @@
  * SUCH DAMAGE.
  *
  * $FreeBSD: src/sys/miscfs/procfs/procfs_type.c,v 1.6 1999/08/28 00:46:56 peter Exp $
- * $DragonFly: src/sys/vfs/procfs/procfs_type.c,v 1.5 2007/02/19 01:14:24 corecode Exp $
  */
 
 #include <sys/param.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #include <sys/proc.h>
 #include <sys/sysent.h>
 #include <sys/vnode.h>
diff --git a/sys/vfs/smbfs/smbfs_io.c b/sys/vfs/smbfs/smbfs_io.c
index fcee3de169..0c7887c626 100644
--- a/sys/vfs/smbfs/smbfs_io.c
+++ b/sys/vfs/smbfs/smbfs_io.c
@@ -34,6 +34,7 @@
 
 #include <sys/param.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #include <sys/resourcevar.h>	/* defines plimit structure in proc struct */
 #include <sys/kernel.h>
 #include <sys/proc.h>
@@ -493,7 +494,7 @@ smbfs_getpages(struct vop_getpages_args *ap)
 				      ~(DEV_BSIZE - 1);
 			vm_page_set_validclean(m, 0, nvalid);
 		}
-		
+
 		if (i != ap->a_reqpage) {
 			/*
 			 * Whether or not to leave the page activated is up in
diff --git a/sys/vfs/smbfs/smbfs_vnops.c b/sys/vfs/smbfs/smbfs_vnops.c
index 20150067fb..dd08ef87e7 100644
--- a/sys/vfs/smbfs/smbfs_vnops.c
+++ b/sys/vfs/smbfs/smbfs_vnops.c
@@ -33,6 +33,7 @@
  */
 #include <sys/param.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #include <sys/kernel.h>
 #include <sys/proc.h>
 #include <sys/priv.h>
diff --git a/sys/vfs/tmpfs/tmpfs_vnops.c b/sys/vfs/tmpfs/tmpfs_vnops.c
index 583d9994c1..1959223f5a 100644
--- a/sys/vfs/tmpfs/tmpfs_vnops.c
+++ b/sys/vfs/tmpfs/tmpfs_vnops.c
@@ -37,6 +37,7 @@
 #include <sys/kernel.h>
 #include <sys/kern_syscall.h>
 #include <sys/param.h>
+#include <sys/uio.h>
 #include <sys/fcntl.h>
 #include <sys/lockf.h>
 #include <sys/priv.h>
@@ -1216,7 +1217,7 @@ tmpfs_nrename(struct vop_nrename_args *ap)
 	 */
 	if (fncp->nc_nlen != tncp->nc_nlen ||
 	    bcmp(fncp->nc_name, tncp->nc_name, fncp->nc_nlen) != 0) {
-		newname = kmalloc(tncp->nc_nlen + 1, tmp->tm_name_zone, 
+		newname = kmalloc(tncp->nc_nlen + 1, tmp->tm_name_zone,
 				  M_WAITOK | M_NULLOK);
 		if (newname == NULL) {
 			error = ENOSPC;
diff --git a/sys/vfs/udf/udf_vnops.c b/sys/vfs/udf/udf_vnops.c
index 9bc6193d02..9c6a48c7ac 100644
--- a/sys/vfs/udf/udf_vnops.c
+++ b/sys/vfs/udf/udf_vnops.c
@@ -31,6 +31,7 @@
 
 #include <sys/param.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #include <sys/namei.h>
 #include <sys/kernel.h>
 #include <sys/malloc.h>
@@ -455,7 +456,7 @@ udf_cmpname(char *cs0string, char *cmpname, int cs0len, int cmplen, struct udf_m
 	int error = 0;
 
 	/* This is overkill, but not worth creating a new zone */
-	
+
 	transname = kmalloc(NAME_MAX * sizeof(unicode_t), M_TEMP,
 			   M_WAITOK | M_ZERO);
 
@@ -808,7 +809,7 @@ udf_strategy(struct vop_strategy_args *ap)
 		 * Files that are embedded in the fentry don't translate well
 		 * to a block number.  Reject.
 		 */
-		if (udf_bmap_internal(node, 
+		if (udf_bmap_internal(node,
 				     bio->bio_offset,
 				     &dblkno, &maxsize)) {
 			clrbuf(bp);
diff --git a/sys/vfs/ufs/ffs_vnops.c b/sys/vfs/ufs/ffs_vnops.c
index 768f3d0c13..088a06ec98 100644
--- a/sys/vfs/ufs/ffs_vnops.c
+++ b/sys/vfs/ufs/ffs_vnops.c
@@ -32,6 +32,7 @@
 
 #include <sys/param.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #include <sys/resourcevar.h>
 #include <sys/signalvar.h>
 #include <sys/kernel.h>
diff --git a/sys/vfs/ufs/ufs_quota.c b/sys/vfs/ufs/ufs_quota.c
index 513fc234cf..6d264b7916 100644
--- a/sys/vfs/ufs/ufs_quota.c
+++ b/sys/vfs/ufs/ufs_quota.c
@@ -35,6 +35,7 @@
 
 #include <sys/param.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #include <sys/kernel.h>
 #include <sys/malloc.h>
 #include <sys/fcntl.h>
@@ -367,7 +368,7 @@ ufs_quotawarn(struct ufs_dquot *dq)
 		dqticks = ticks / hz;
 		uprintf("%s: warning, quota file expanded, quotacheck "
 			"was not run!\n",
-			dq->dq_ump->um_mountp->mnt_stat.f_mntfromname); 
+			dq->dq_ump->um_mountp->mnt_stat.f_mntfromname);
 	}
 }
 
diff --git a/sys/vfs/ufs/ufs_vnops.c b/sys/vfs/ufs/ufs_vnops.c
index e505c89665..4c054f09b4 100644
--- a/sys/vfs/ufs/ufs_vnops.c
+++ b/sys/vfs/ufs/ufs_vnops.c
@@ -41,6 +41,7 @@
 
 #include <sys/param.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #include <sys/kernel.h>
 #include <sys/fcntl.h>
 #include <sys/stat.h>
diff --git a/sys/vm/vnode_pager.c b/sys/vm/vnode_pager.c
index f479fe6bcb..c0169442c5 100644
--- a/sys/vm/vnode_pager.c
+++ b/sys/vm/vnode_pager.c
@@ -51,6 +51,7 @@
 
 #include <sys/param.h>
 #include <sys/systm.h>
+#include <sys/uio.h>
 #include <sys/kernel.h>
 #include <sys/proc.h>
 #include <sys/vnode.h>
@@ -574,7 +575,7 @@ vnode_pager_generic_getpages(struct vnode *vp, vm_page_t *mpp, int bytecount,
 
 	/*
 	 * Calculate the actual number of bytes read and clean up the
-	 * page list.  
+	 * page list.
 	 */
 	bytecount -= auio.uio_resid;
 
@@ -638,7 +639,7 @@ vnode_pager_putpages(vm_object_t object, vm_page_t *m, int count,
 	/*
 	 * Force synchronous operation if we are extremely low on memory
 	 * to prevent a low-memory deadlock.  VOP operations often need to
-	 * allocate more memory to initiate the I/O ( i.e. do a BMAP 
+	 * allocate more memory to initiate the I/O ( i.e. do a BMAP
 	 * operation ).  The swapper handles the case by limiting the amount
 	 * of asynchronous I/O, but that sort of solution doesn't scale well
 	 * for the vnode pager without a lot of work.
diff --git a/usr.bin/kdump/kdump.c b/usr.bin/kdump/kdump.c
index dcb0023efe..ad3a3aeaaf 100644
--- a/usr.bin/kdump/kdump.c
+++ b/usr.bin/kdump/kdump.c
@@ -36,7 +36,6 @@
 #include <sys/errno.h>
 #include <sys/param.h>
 #include <sys/time.h>
-#include <sys/uio.h>
 #include <sys/ktrace.h>
 #include <sys/ioctl.h>
 #include <sys/ptrace.h>
diff --git a/usr.bin/ktrace/ktrace.c b/usr.bin/ktrace/ktrace.c
index d25e4fa9a7..e66f0a6395 100644
--- a/usr.bin/ktrace/ktrace.c
+++ b/usr.bin/ktrace/ktrace.c
@@ -29,7 +29,6 @@
  * @(#) Copyright (c) 1988, 1993 The Regents of the University of California.  All rights reserved.
  * @(#)ktrace.c	8.1 (Berkeley) 6/6/93
  * $FreeBSD: src/usr.bin/ktrace/ktrace.c,v 1.12.2.3 2001/07/11 00:29:27 mikeh Exp $
- * $DragonFly: src/usr.bin/ktrace/ktrace.c,v 1.4 2005/06/01 03:05:40 swildner Exp $
  */
 
 #include <sys/param.h>
@@ -37,7 +36,6 @@
 #include <sys/file.h>
 #include <sys/time.h>
 #include <sys/errno.h>
-#include <sys/uio.h>
 #include <sys/ktrace.h>
 
 #include <err.h>
