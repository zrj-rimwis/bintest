From f4053fb8bab17b9ddec84e1b85be3907e3729e1a Mon Sep 17 00:00:00 2001
From: zrj <rimvydas.jasinskas@gmail.com>
Date: Wed, 6 Nov 2019 17:13:34 +0200
Subject: [PATCH 18/19] <sys/stdint.h>: Repurpose.

 Start using this header as proxy to separate non sys/ headers from
 userland only headers.
 * Move in first kernel specific types from <sys/types.h>.
 * Tidy up type definitions for better readability.
 * Remove old comment about cdev that is no longer needed.

 Strictly non functional changes.
---
 sys/sys/stdint.h | 59 +++++++++++++++++++++++++++++++++++++++------
 sys/sys/types.h  | 62 ++++++++++--------------------------------------
 2 files changed, 64 insertions(+), 57 deletions(-)

diff --git a/sys/sys/stdint.h b/sys/sys/stdint.h
index fc8f198fe7..3dad400b58 100644
--- a/sys/sys/stdint.h
+++ b/sys/sys/stdint.h
@@ -1,16 +1,61 @@
 /*
- * This file is in the public domain.
- * $FreeBSD: src/sys/sys/inttypes.h,v 1.2 1999/08/28 00:51:47 peter Exp $
+ * Copyright (c) 2019 The DragonFly Project.  All rights reserved.
  *
- * Note: since portions of these header files can be included with various
- * other combinations of defines, we cannot surround the whole header file
- * with an #ifndef sequence.  Elements are individually protected.
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in the
+ *    documentation and/or other materials provided with the distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+ * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
+ * FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE
+ * COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
+ * INCIDENTAL, SPECIAL, EXEMPLARY OR CONSEQUENTIAL DAMAGES (INCLUDING,
+ * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
+ * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
+ * SUCH DAMAGE.
  */
 
 #ifndef _SYS_STDINT_H_
-#define _SYS_STDINT_H_
+#define	_SYS_STDINT_H_
 
 #include <sys/cdefs.h>
 #include <machine/stdint.h>
 
-#endif	/* SYS_STDINT_H */
+/*
+ * Proxy header for kernel compilation.  Do not include outside kernel
+ * headers. Userland should use <stdint.h> instead.
+ *
+ * This header is not a convenient placeholder for non integer types.
+ */
+
+#ifdef _KERNEL
+typedef	__boolean_t	boolean_t;		/* kernel only */
+
+#if !defined(__bool_true_false_are_defined) && !defined(__cplusplus)
+#define	__bool_true_false_are_defined	1
+#define	false	0
+#define	true	1
+#if __STDC_VERSION__ < 199901L && __GNUC__ < 3
+typedef	int	_Bool;
+#endif
+typedef	_Bool	bool;
+#endif /* !__bool_true_false_are_defined && !__cplusplus */
+
+#define	offsetof(type, field)	__offsetof(type, field)
+
+#ifndef _PTRDIFF_T_DECLARED
+typedef	__ptrdiff_t	ptrdiff_t;	/* ptr1 - ptr2 for kernel */
+#define	_PTRDIFF_T_DECLARED
+#endif
+#endif /* _KERNEL */
+
+#endif /* SYS_STDINT_H */
diff --git a/sys/sys/types.h b/sys/sys/types.h
index ec5a523295..a309717945 100644
--- a/sys/sys/types.h
+++ b/sys/sys/types.h
@@ -41,9 +41,6 @@
 #ifndef _SYS_CDEFS_H_
 #include <sys/cdefs.h>
 #endif
-#ifndef _STDINT_H_
-#include <stdint.h>
-#endif
 #include <machine/endian.h>
 #include <machine/stdint.h>
 
@@ -137,64 +134,26 @@ typedef	__uint32_t	uid_t;		/* user id */
 #endif
 typedef	__uint32_t	useconds_t;	/* microseconds (unsigned) */
 
-#if defined(_KERNEL) || defined(_KERNEL_STRUCTURES)
-typedef	u_int64_t	uoff_t;
-#endif
-
-#ifdef _KERNEL
-#ifndef __BOOLEAN_T_DEFINED__
-#define	__BOOLEAN_T_DEFINED__
-typedef	__boolean_t	boolean_t;
-#endif
-
-#if !defined(__bool_true_false_are_defined) && !defined(__cplusplus)
-#define	__bool_true_false_are_defined	1
-#define	false	0
-#define	true	1
-#if __STDC_VERSION__ < 199901L && __GNUC__ < 3
-typedef	int	_Bool;
-#endif
-typedef	_Bool	bool;
-#endif /* !__bool_true_false_are_defined && !__cplusplus */
-
-#ifndef _PTRDIFF_T_DECLARED
-typedef	__ptrdiff_t	ptrdiff_t;	/* ptr1 - ptr2 for kernel */
-#define	_PTRDIFF_T_DECLARED
-#endif
-#endif /* _KERNEL */
-
 /*
- * XXX cdev_t has different meanings for userland vs kernel compiles.  What
- * do we do for _KERNEL_STRUCTURES ?  For the moment stick with the userland
- * meaning as being the more compatible solution.
+ * The kernel now uses only udev_t or cdev_t.  Userland uses dev_t.
+ * Virtual kernel builds needs dev_t in order to include userland headers.
  */
-
 #if defined(_KERNEL) || defined(_KERNEL_STRUCTURES)
-
 struct cdev;
-
-typedef	u_int32_t	udev_t;		/* device number */
 typedef	struct cdev	*cdev_t;
+typedef	u_int32_t	udev_t;		/* device number */
+typedef	u_int64_t	uoff_t;		/* uio offset */
+#endif /* _KERNEL) || _KERNEL_STRUCTURES */
 
-#endif
-
-/*
- * The kernel now uses only udev_t or cdev_t.  Userland uses dev_t.
- * Virtual kernel builds needs dev_t in order to include userland header
- * files.
- */
 #ifdef _KERNEL
-
-#define	offsetof(type, field) __offsetof(type, field)
 typedef	udev_t		dev_t;		/* device number */
+#endif /* _KERNEL */
 
-#else
-
+#ifndef _KERNEL
 typedef	u_int32_t	dev_t;		/* device number */
 #define	udev_t dev_t
 
 #if __BSD_VISIBLE
-
 /*
  * minor() gives a cookie instead of an index since we don't want to
  * change the meanings of bits 0-15 or waste time and space shifting
@@ -203,9 +162,7 @@ typedef	u_int32_t	dev_t;		/* device number */
 #define	major(x)	((int)(((u_int)(x) >> 8)&0xff)) /* major number */
 #define	minor(x)	((int)((x)&0xffff00ff))         /* minor number */
 #define	makedev(x,y)	((dev_t)(((x) << 8) | (y)))     /* create dev_t */
-
 #endif /* __BSD_VISIBLE */
-
 #endif /* !_KERNEL */
 
 #ifndef _CLOCK_T_DECLARED
@@ -245,7 +202,12 @@ typedef	__time_t	time_t;
 typedef	__timer_t	timer_t;
 #endif
 
+#ifndef _STDINT_H_
+#include <stdint.h>			/* XXX */
+#endif
+
 #if defined(_KERNEL) || defined(_KERNEL_STRUCTURES)
+#include <sys/stdint.h>			/* kernel int types */
 #include <machine/types.h>		/* for vm_offet_t */
 #endif
 
-- 
2.23.0

